FeedMap
	Plots location data from feeds onto a leaflet.js map. Supports XML and
	JSON format feeds.

Requirements
	jQuery
	Underscore
	Backbone.js
	leaflet.js

Variables

	feedMap.scriptRoot [string]
		Where feedMap.load will look for a given js file. e.g.
		feedMap.scriptRoot = “js/”. Note: Must have trailing slash.

	feedMap.proxyServer [string]
		Specify a proxy server that will proxy any feed. Should be used where
		external feeds might want to be buffered or CORS-enabled. URL will
		appear as the url query parameter.

		For example, if the proxy is set as:
			http://localhost:9292
		and a feed has the url:
			http://data.someurl.com/somedata.xml?blah=3
		the following request will be made:
			http://localhost:9292?url=http://data.someurl.com/somedata.xml?blah=3

Functions

	feedMap.load(url_to_js_file)
		Load a js file containing a feed definition. This will be prefixed
		with feedMap.scriptRoot and suffixed with “.js”.

	feedMap.addFeed(id, options)
		Define a feed, describing where to find the feed, what format to
		expect it in, how to parse it and how this should be presented on a
		map.

		id [string]
			Identifies the feed. Should be the same as the filename feed is
			defined in.

		options	[object]
			name [string]			Name of feed as it will appear in map control
			proxy [boolean]			Whether to use feedMap.proxy
			url [string]			URL of feed
			dataType [string]		e.g., xml or json
			contentType [string]	e.g., application/xml or application/json
			parse (response) [function]
				A function to build and return a JSON object from the response
				object. You may like to use jQuery or Jath for XML parsing.

			renderMapItems (model, model_json) [function]
				A function to generate and return map items (such as markers or
				polygons). model is the Backbone model and model_json is that model
				represented in JSON format.

			mapItemClick (item, model, model_json) [function]
				A function to handle when the map item was clicked. model is the
				Backbone model and model_json is that model represented in JSON
				format.

	feedMap.ready(callback)
		Add a callback function for when FeedMap has loaded.